name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    # Add this step to ensure yarn.lock exists
    - name: Verify Yarn lockfile
      run: |
        if [ ! -f "yarn.lock" ]; then
          echo "❌ yarn.lock not found! Please commit your yarn.lock file."
          exit 1
        fi
        echo "✅ yarn.lock found"

    - name: Install dependencies
      run: yarn install --frozen-lockfile --prefer-offline

    - name: Run linting
      run: yarn lint
      continue-on-error: false

    - name: Run type checking
      run: yarn type-check
      continue-on-error: false

    - name: Run tests
      run: yarn test:coverage
      continue-on-error: false

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: hashFiles('coverage/lcov.info') != ''
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile --prefer-offline

    - name: Build application
      run: yarn build
      env:
        NEXT_PUBLIC_TMDB_API_KEY: ${{ secrets.NEXT_PUBLIC_TMDB_API_KEY }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-${{ github.sha }}
        path: |
          .next/
          public/
          package.json
          yarn.lock
        retention-days: 7

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint-and-test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod --confirm'
